import {
	type EnkoreAutogeneratedFile,
	createEntity
} from "@anio-software/enkore-private.spec"
import type {AutogenerateAPIContext} from "#~src/autogenerate/AutogenerateAPIContext.ts"
import type {Options} from "./Options.ts"
import {destinationPathToFunctionName} from "./destinationPathToFunctionName.ts"
import {getBaseModuleSpecifier} from "#~src/getBaseModuleSpecifier.ts"
import {getRuntimeImportSpecifier} from "../getRuntimeImportSpecifier.ts"
import path from "node:path"

export function _generateInstantiationFile(
	apiContext: AutogenerateAPIContext,
	options: Options
): EnkoreAutogeneratedFile {
	const exportName = destinationPathToFunctionName(
		options.destination
	).slice(0, -("Factory".length))

	const destinationPath = path.join(
		path.dirname(options.destination),
		`${exportName}.ts`
	)

	return createEntity("EnkoreAutogeneratedFile", 0, 0, {
		destinationPath,
		generator() {
			// we assume/know that the factory file is right beside
			// the instantiation file
			return `
import {getProject as enkoreGetProject} from "${getBaseModuleSpecifier(apiContext.target)}/project"
import {createContext as enkoreCreateContext} from "${getRuntimeImportSpecifier(apiContext)}"
import {${exportName}Factory as factory} from "./${exportName}Factory.ts"

export const ${exportName} = factory(
	enkoreCreateContext(enkoreGetProject(), undefined)
)
`.slice(1)
		}
	})
}
