import readJSONFile from "../../src/runtime/node/util/readJSONFile.mjs"

import cleanRealmAutoFiles from "./cleanRealmAutoFiles.mjs"
import fs from "node:fs/promises"
import path from "node:path"
import bundleFile from "./bundleFile.mjs"

function autogenerateBanner(realm, version) {
	return `/**
 * This file belongs to realm-${realm}@${version}.
 * Warning: this file was auto-generated. Do not edit this file directly.
 */\n`
}

async function writeInstall(realm, version) {
	let install_template = await bundleFile("./src/install.template.mjs")

	install_template = install_template
		.split(`<<REALM>>`).join(realm)

	install_template += `\n`
	install_template += `import additional_dependencies from "../dependencies.mjs"\n`
	install_template += `await runInstall(false, additional_dependencies)\n`

	await fs.writeFile(
		path.join("src", `realm-${realm}`, "auto", "install.mjs"),
		autogenerateBanner(realm, version) + install_template
	)
}

export default async function(realm, version) {
	await cleanRealmAutoFiles(realm)

	await writeInstall(realm, version)

	let package_json_template = await readJSONFile(
		`./src/realm-${realm}/package.template.json`
	)

	if (version !== null) {
		delete package_json_template.private
	}

	package_json_template.version = version

	await fs.writeFile(
		`./src/realm-${realm}/package.json`, JSON.stringify(package_json_template, null, 2) + "\n"
	)
}
